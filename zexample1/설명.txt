1. 스프링부트 프로젝트는 빌드 구조가 필수이다.
2. 스프링부트 프로젝트를 실행하면 주소는 아래와 같다.
	http://localhost:8080
3. 스프링부트 프로젝트는 여러개 실행할 수 없다
	=> 포트가 겹치기 때문
4. 프로젝트의 포트를 변경하자.
	스프링부트 프로젝트는 WAS 를 내장하고 있다.
	따라서 외부 서버 없이 단독 실행한다.
5. 스프링부트 프로젝트는 application.properties 라는
	설정 파일을 가진다.
6. index.html 을 만들자.
	html 의 위치는 src/main/resources/static 이다.
7. JSP 를 만들어보자.
	내장 톰캣은 JSP 를 지원하지 않는다.
	스프링부트의 공식 뷰는 thymeleaf 이다.
8. 작업은 항상 자바에 의해 통제되어야 한다 (컨트롤러).
8-1. 라이브러리와 프레임워크
	- 라이브러리 : 함수들의 집합
	- 프레임워크 : 라이브러리 + 사용법 (표준. 무엇을 어떤 순서로 만들어야 한다)
9. 표준을 만드는 방법
	- 부모 클래스는 만들어야 할 메서드의 이름을 정한다.
	- 자식 클래스는 부모를 상속받아 메서드를 OverRide 한다.
@WebServlat("/")
public IndexServlet extends HttpServlet {
	protected void doGet(HttpServlet request, HttpResponse response) {
		RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
		rd.forward(request, response);
	}
}
10. 스프링이 생성한 객체 : 스프링 Bean
	- 스프링 빈이 되는 어노테이션
		@Component, @Controller, @Service, @Repository
	- 스프링 빈은 이름이 같아서는 안된다.
		스프링 빈은 객체를 스프링이 생성한다.
		객체의 이름은 첫 글자만 소문자로 바꾼 것이다
		=> SampleController sampleController = new~();